{"version":3,"sources":["store/trackersReducer.js","components/New/New.jsx","assets/littlePlay.svg","assets/stop.svg","assets/delete.svg","components/Tracker/Tracker.jsx","components/TrackerList/TrackerList.jsx","App.jsx","store/store.js","localStorage.js","index.jsx"],"names":["REMOVE","STOP","START","UPDATE_SEC","UPDATE_MIN","UPDATE_H","Container","styled","div","InputBody","input","Button","svg","New","dispatch","useDispatch","useState","name","setName","value","onChange","event","target","onTrackerNameCahnge","placeholder","viewBox","onClick","preventDefault","tracker","id","Date","now","isActive","seconds","minutes","hours","startingTime","moment","unix","type","payload","add","createTracker","fill","d","TrackerBody","TrackerName","Name","span","Time","Actions","ControlsButton","img","DeleteButton","Tracker","useEffect","updateHour","updateMinute","interval","setInterval","currentSecond","updateSecond","clearInterval","style","color","secondsParam","minutesParam","hoursParam","strS","toString","strM","strH","sec","length","min","hou","getTimeString","src","stopButton","playButton","stop","start","deleteButton","remove","List","TrackerList","trackerList","useSelector","trackers","map","Header","h1","MainSection","App","initialState","trackersFromStorage","window","localStorage","getItem","JSON","parse","currentTracker","totalSecInSleep","hoursInSleep","Math","floor","minutesInSleep","secondsInSleep","e","getStateFromStorage","undefined","store","createStore","state","action","filter","subscribe","getState","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9bb090c7.chunk.js","sourcesContent":["const NEW = 'NEW';\nconst REMOVE = 'REMOVE';\nconst STOP = 'STOP';\nconst START = 'START';\nconst UPDATE_SEC = 'UPDATE_SEC';\nconst UPDATE_MIN = 'UPDATE_MIN';\nconst UPDATE_H = 'UPDATE_H';\n\nexport const add = (tracker) => ({\n  type: NEW,\n  payload: {\n    tracker,\n  },\n});\n\nexport const remove = (id) => ({\n  type: REMOVE,\n  payload: {\n    id,\n  },\n});\n\nexport const stop = (id) => ({\n  type: STOP,\n  payload: {\n    id,\n  },\n});\n\nexport const start = (id, startingTime) => ({\n  type: START,\n  payload: {\n    id,\n    startingTime,\n  },\n});\n\nexport const updateSecond = (id, currentSecond, startingTime) => ({\n  type: UPDATE_SEC,\n  payload: {\n    id,\n    currentSecond,\n    startingTime,\n  },\n});\n\nexport const updateMinute = (id) => ({\n  type: UPDATE_MIN,\n  payload: {\n    id,\n  },\n});\n\nexport const updateHour = (id) => ({\n  type: UPDATE_H,\n  payload: {\n    id,\n  },\n});\n\nexport const trackersReducer = (state, action) => {\n  switch (action.type) {\n    case NEW:\n      return [...state, action.payload.tracker];\n\n    case REMOVE:\n      return state.filter((tracker) => tracker.id !== action.payload.id);\n\n    case START:\n      return state.map((tracker) => {\n        if (tracker.id === action.payload.id) {\n          return {\n            ...tracker,\n            isActive: true,\n          };\n        }\n        return tracker;\n      });\n\n    case STOP:\n      return state.map((tracker) => {\n        if (tracker.id === action.payload.id) {\n          return {\n            ...tracker,\n            isActive: false,\n          };\n        }\n        return tracker;\n      });\n\n    case UPDATE_SEC:\n      return state.map((tracker) => {\n        if (tracker.id === action.payload.id) {\n          return {\n            ...tracker,\n            seconds: tracker.seconds + (action.payload.currentSecond - action.payload.startingTime),\n            startingTime: action.payload.startingTime,\n          };\n        }\n        return tracker;\n      });\n\n    case UPDATE_MIN:\n      return state.map((tracker) => {\n        if (tracker.id === action.payload.id) {\n          return {\n            ...tracker,\n            seconds: 0,\n            minutes: tracker.minutes + 1,\n          };\n        }\n        return tracker;\n      });\n\n    case UPDATE_H:\n      return state.map((tracker) => {\n        if (tracker.id === action.payload.id) {\n          return {\n            ...tracker,\n            minutes: 0,\n            hours: tracker.hours + 1,\n          };\n        }\n        return tracker;\n      });\n    default:\n      return state;\n  }\n};\n","import React, { useState } from 'react';\nimport moment from 'moment';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { add } from '../../store/trackersReducer';\n\nexport const Container = styled.div`\n  display: flex;\n  width: 540px;\n  margin-top: 15px;\n  height: 45px;\n  border-radius: 45px;\n  border: 1px solid #7f7f7f;\n  align-items: center;\n  @media (max-width: 564px) {\n    width: calc(100% - 24px);\n    padding-left: 0;\n    margin-left: 10px;\n    margin-right: 10px;\n  }\n`;\n\nexport const InputBody = styled.input`\n  padding-left: 21px;\n  outline: none;\n  border: none;\n  width: 90%;\n  height: 95%;\n  font-size: 14px;\n  border-radius: 45px;\n`;\n\nexport const Button = styled.svg`\n  align-items: center;\n  width: 45px;\n  height: 45px;\n`;\n\nexport const New = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n\n  const onTrackerNameCahnge = (event) => {\n    setName(event.target.value);\n  };\n\n  const createTracker = (event) => {\n    event.preventDefault();\n    const tracker = {\n      id: Date.now(),\n      name: name || Date.now(),\n      isActive: true,\n      seconds: 0,\n      minutes: 0,\n      hours: 0,\n      startingTime: moment().unix(),\n    };\n    dispatch(add(tracker));\n    setName('');\n  };\n\n  return (\n    <Container>\n      <InputBody\n        value={name}\n        onChange={(event) => onTrackerNameCahnge(event)}\n        placeholder=\"Name new tracker\"\n      />\n      <Button\n        viewBox=\"2 2 20 20\"\n        onClick={(event) => createTracker(event)}\n      >\n        <path fill=\"green\" d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 14.5v-9l6 4.5-6 4.5z\" />\n      </Button>\n    </Container>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/littlePlay.39fb5126.svg\";","export default __webpack_public_path__ + \"static/media/stop.12a98abf.svg\";","export default __webpack_public_path__ + \"static/media/delete.df5e329c.svg\";","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport styled from 'styled-components';\nimport {\n  remove,\n  stop,\n  start,\n  updateSecond,\n  updateMinute,\n  updateHour,\n} from '../../store/trackersReducer';\n\nimport playButton from '../../assets/littlePlay.svg';\nimport stopButton from '../../assets/stop.svg';\nimport deleteButton from '../../assets/delete.svg';\n\nconst TrackerBody = styled.div`\n  font-weight: bold;\n  border-top: 1px solid #e5e5e5;\n  height: 62px;\n  width: 540px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &:nth-last-child(-n+1){\n    border-bottom: 1px solid #e5e5e5;\n  }\n  @media (max-width: 564px){\n    width: 100%;\n  }\n`;\n\nconst TrackerName = styled.div`\n  width: 200px;\n  display: flex;\n  text-align: left;\n  padding-left: 21px;\n  @media (max-width: 564px){\n    width: 130px;\n  }\n`;\n\nconst Name = styled.span`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\n\nconst Time = styled.div`\n  margin-left: 100px;\n  @media (max-width: 564px){\n    margin-left: 0;\n  }\n`;\n\nconst Actions = styled.div`\n  &:nth-child(1){\n    margin-right: 10px;\n    &:hover {\n      cusror: pointer;\n    }\n  }\n`;\n\nconst ControlsButton = styled.img`\n`;\n\nconst DeleteButton = styled.img`\n  margin-left: 3px;\n  width: 24px;\n  height: 24px;\n`;\nexport const Tracker = ({\n  id, name, isActive, hours, minutes, seconds,\n}) => {\n  const dispatch = useDispatch();\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    const startingTime = moment().unix();\n    if (isActive) {\n      if (minutes > 59) {\n        dispatch(updateHour(id));\n      }\n      if (seconds > 59) {\n        dispatch(updateMinute(id));\n      }\n      const interval = setInterval(() => {\n        dispatch(updateSecond(id, moment().unix(), startingTime));\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  });\n\n  const getTimeString = (secondsParam, minutesParam, hoursParam) => {\n    const strS = secondsParam.toString();\n    const strM = minutesParam.toString();\n    const strH = hoursParam.toString();\n    const sec = strS.length < 2 ? `0${strS}` : strS;\n    const min = strM.length < 2 ? `0${strM}` : strM;\n    const hou = strH.length < 2 ? `0${strH}` : strH;\n    return `${hou}-${min}-${sec}`;\n  };\n\n  return (\n\n    <TrackerBody\n      style={isActive ? { color: 'green' } : { color: 'black' }}\n    >\n      <TrackerName>\n        <Name>\n          {name || `${id}`}\n        </Name>\n      </TrackerName>\n      <Time>\n        {getTimeString(seconds, minutes, hours)}\n      </Time>\n      <Actions>\n        <ControlsButton\n          src={isActive ? stopButton : playButton}\n          onClick={() => (isActive ? dispatch(stop(id)) : dispatch(start(id)))}\n        />\n        <DeleteButton\n          src={deleteButton}\n          onClick={() => dispatch(remove(id))}\n        />\n      </Actions>\n    </TrackerBody>\n  );\n};\n\nTracker.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]).isRequired,\n  isActive: PropTypes.bool.isRequired,\n  hours: PropTypes.number.isRequired,\n  minutes: PropTypes.number.isRequired,\n  seconds: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { Tracker } from '../Tracker/Tracker';\n\nconst List = styled.div`\nmargin-top: 25px;\n`;\n\nexport const TrackerList = () => {\n  const trackersFromServer = useSelector((trackers) => trackers);\n  const trackerList = (trackersFromServer) || [];\n\n  return (\n    <List>\n      {trackerList.map((tracker) => (\n        <Tracker\n          key={tracker.id}\n          id={tracker.id}\n          name={tracker.name}\n          isActive={tracker.isActive}\n          hours={tracker.hours}\n          minutes={tracker.minutes}\n          seconds={tracker.seconds}\n          startingTime={tracker.startingTime}\n        />\n      ))}\n    </List>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { New } from './components/New/New';\nimport { TrackerList } from './components/TrackerList/TrackerList';\n\nconst Container = styled.div`\n  text-align: center;\n  font-family: 'PT Sans', sans-serif;\n`;\n\nconst Header = styled.h1`\n  font-size: 50px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst MainSection = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const App = () => (\n  <Container>\n    <Header>\n      tracker\n    </Header>\n    <MainSection>\n      <New />\n      <TrackerList />\n    </MainSection>\n  </Container>\n);\n\nexport default App;\n","import { createStore } from 'redux';\nimport { getStateFromStorage, saveStateToStorage } from '../localStorage';\nimport { trackersReducer } from './trackersReducer';\n\nlet initialState = getStateFromStorage();\n\nif (initialState === undefined) {\n  initialState = [];\n}\n\nconst store = createStore(\n  trackersReducer,\n  initialState,\n);\n\nstore.subscribe(() => {\n  saveStateToStorage(store.getState());\n});\n\nexport default store;\n","import moment from 'moment';\n\nexport const getStateFromStorage = () => {\n  try {\n    const trackersFromStorage = window.localStorage.getItem('trackers');\n    if (trackersFromStorage === null) {\n      return undefined;\n    }\n\n    const trackers = JSON.parse(trackersFromStorage);\n\n    return trackers.map((currentTracker) => {\n      if (currentTracker.isActive) {\n        const totalSecInSleep = (moment().unix() - currentTracker.startingTime);\n\n        const hoursInSleep = Math.floor(totalSecInSleep / 360);\n        const minutesInSleep = Math.floor(totalSecInSleep / 60) - (hoursInSleep * 60);\n        const secondsInSleep = totalSecInSleep - (hoursInSleep * 60 * 60) - (minutesInSleep * 60);\n\n        let hours = hoursInSleep + currentTracker.hours;\n        let minutes = minutesInSleep + currentTracker.minutes;\n        let seconds = secondsInSleep + currentTracker.seconds;\n\n        if (seconds > 59) {\n          minutes += 1;\n          seconds = 0;\n        }\n\n        if (minutes > 59) {\n          hours += 1;\n          minutes = 0;\n        }\n\n        return {\n          ...currentTracker,\n          seconds,\n          minutes,\n          hours,\n        };\n      }\n      return currentTracker;\n    });\n  } catch (e) {\n    return undefined;\n  }\n};\n\nexport const saveStateToStorage = (trackers) => window.localStorage.setItem('trackers', JSON.stringify(trackers));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { Provider } from 'react-redux';\nimport { App } from './App';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}